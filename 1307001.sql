drop table PROJECTT;
drop table GROUPP;
drop table COURSE;
drop table TEACHER;
drop table STUDENTS;
--Creation of table student
CREATE TABLE STUDENTS(
	STUDENT_NAME VARCHAR(10),
	ROLL NUMBER(10)	NOT NULL,
	YEAR NUMBER(10) CHECK(YEAR>0 AND YEAR<5),
	TERM NUMBER(10) CHECK(TERM>0 AND TERM<3),
	MARKS NUMBER(10) default 0
);
ALTER TABLE STUDENTS ADD CONSTRAINT ROLL_PK PRIMARY KEY(ROLL);
--Creation of table teacher
CREATE TABLE TEACHER(
	TEACHER_NAME VARCHAR(10),
	TEACHER_ID NUMBER(10) NOT NULL
);
ALTER TABLE TEACHER ADD CONSTRAINT T_ID_PK PRIMARY KEY(TEACHER_ID);
--Creation of table group
CREATE TABLE GROUPP(
	GROUP_ID NUMBER(10),
	ROLL NUMBER(10)
);
ALTER TABLE GROUPP ADD CONSTRAINT ROLL_FK FOREIGN KEY(ROLL) REFERENCES STUDENTS(ROLL) ON DELETE CASCADE;
--Creation of table course
CREATE TABLE COURSE(
	COURSE_ID VARCHAR(10) NOT NULL,
	TEACHER_ID NUMBER(10),
	GROUP_ID NUMBER(10)
);
ALTER TABLE COURSE ADD CONSTRAINT C_ID_PK PRIMARY KEY(COURSE_ID);
ALTER TABLE COURSE ADD CONSTRAINT T_ID_FK FOREIGN KEY(TEACHER_ID) REFERENCES TEACHER(TEACHER_ID) ON DELETE CASCADE;
-- Creation of table project
CREATE TABLE PROJECTT(
	PROJECT_NAME VARCHAR(50),
	GROUP_ID NUMBER(10),
	COURSE_ID VARCHAR(10),
	MARKS NUMBER(10)
);
ALTER TABLE PROJECTT ADD CONSTRAINT C_ID_FK FOREIGN KEY(COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE;

--Describe All tables
DESCRIBE STUDENTS;
DESCRIBE TEACHER;
DESCRIBE GROUPP;
DESCRIBE COURSE;
DESCRIBE PROJECTT;

--Alter table
ALTER TABLE TEACHER ADD PROFESSINAL_SKILL VARCHAR(50);
ALTER TABLE TEACHER MODIFY PROFESSINAL_SKILL VARCHAR(20);
ALTER TABLE TEACHER RENAME COLUMN PROFESSINAL_SKILL TO PS;
DESCRIBE TEACHER;
ALTER TABLE TEACHER DROP COLUMN PS;

--Checking if same roll doesn't have 2 groups
SET SERVEROUTPUT ON
CREATE OR REPLACE TRIGGER DUP_ROLL BEFORE INSERT OR UPDATE ON GROUPP FOR EACH ROW
DECLARE
	VAL1 NUMBER(10):=0;
	VAL NUMBER(10);
BEGIN
	-- VAL:=:NEW.ROLL;
	SELECT COUNT(ROLL) INTO VAL1 FROM GROUPP WHERE ROLL=:NEW.ROLL;
	IF VAL1>0 THEN
		RAISE_APPLICATION_ERROR(-20000,'Roll already exist');
		-- DBMS_OUTPUT.PUT_LINE('THE '|| VAL1);
	END IF;

END;
/

-- Inserting data of students table
INSERT INTO STUDENTS VALUES('Akash',1307001,3,1,77);
INSERT INTO STUDENTS VALUES('Tanmoy',1307006,3,1,78);
INSERT INTO STUDENTS VALUES('Manik',1307007,3,1,69);
INSERT INTO STUDENTS VALUES('Shekhar',1307008,3,1,72);
INSERT INTO STUDENTS VALUES('Rafi',1307009,3,1,73);
INSERT INTO STUDENTS VALUES('Iqbal',1307010,3,1,78);
INSERT INTO STUDENTS VALUES('Tajul',1307014,3,1,80);
INSERT INTO STUDENTS VALUES('Shuvom',1307020,3,1,75);
INSERT INTO STUDENTS VALUES('Arijit',1307021,3,1,79);
INSERT INTO STUDENTS VALUES('Majid',1307022,3,1,60);

--Inserting data of group table
INSERT INTO GROUPP VALUES(1,1307001);
INSERT INTO GROUPP VALUES(1,1307001);
INSERT INTO GROUPP VALUES(2,1307006);
INSERT INTO GROUPP VALUES(2,1307007);
INSERT INTO GROUPP VALUES(3,1307008);
INSERT INTO GROUPP VALUES(4,1307009);
INSERT INTO GROUPP VALUES(3,1307010);
INSERT INTO GROUPP VALUES(4,1307014);
INSERT INTO GROUPP VALUES(4,1307009);
INSERT INTO GROUPP VALUES(5,1307020);
INSERT INTO GROUPP VALUES(1,1307021);
INSERT INTO GROUPP VALUES(5,1307022);

--Inserting data of teacher table
INSERT INTO TEACHER VALUES('Prof. A',1);
INSERT INTO TEACHER VALUES('Prof. B',2);
INSERT INTO TEACHER VALUES('Prof. C',3);
INSERT INTO TEACHER VALUES('Prof. D',4);
INSERT INTO TEACHER VALUES('Prof. E',5);

--Inserting data of course table
INSERT INTO COURSE VALUES('CSE3101',1,1);
INSERT INTO COURSE VALUES('CSE3104',2,2);
INSERT INTO COURSE VALUES('CSE3110',3,3);
INSERT INTO COURSE VALUES('CSE3120',4,4);
INSERT INTO COURSE VALUES('ECE3116',5,5);

--Inserting data of project table
INSERT INTO PROJECTT VALUES('Project Submission Management',1,'CSE3101',75);
INSERT INTO PROJECTT VALUES('Contest Ranklist Management',2,'CSE3104',78);
INSERT INTO PROJECTT VALUES('Library Management',3,'CSE3110',70);
INSERT INTO PROJECTT VALUES('Messanger Management',4,'CSE3120',72);
INSERT INTO PROJECTT VALUES('Dining Management',5,'ECE3116',80);

--Showing all rows of table
SELECT * FROM STUDENTS;
SELECT * FROM TEACHER;
SELECT * FROM PROJECTT;
SELECT * FROM GROUPP;
SELECT * FROM COURSE;

--Showing the description of the students who have marks more than 75
SET SERVEROUTPUT ON
DECLARE
     CURSOR STU IS SELECT STUDENT_NAME,ROLL,MARKS FROM STUDENTS WHERE MARKS>75;
  	 STU_RECORD STU%ROWTYPE;
  	 CNT INT;

BEGIN
	OPEN STU;
	SELECT COUNT(*) INTO CNT FROM STUDENTS WHERE MARKS>75;
	DBMS_OUTPUT.PUT_LINE(CNT);
	DBMS_OUTPUT.PUT_LINE('Name     Roll      Marks');
	DBMS_OUTPUT.PUT_LINE('------------------------');
      LOOP
        FETCH STU INTO STU_RECORD;
      	DBMS_OUTPUT.PUT_LINE (STU_RECORD.STUDENT_NAME||'   '||STU_RECORD.ROLL||'   '||STU_RECORD.MARKS);
      	EXIT WHEN STU%ROWCOUNT=CNT;
      END LOOP;
     CLOSE STU;   
END;
/


--Inserting into Teacher table using procedure
CREATE OR REPLACE PROCEDURE InsertionOfTeacher(T_NAME TEACHER.TEACHER_NAME%type,T_ID TEACHER.TEACHER_ID%type) IS
BEGIN
	INSERT INTO TEACHER VALUES(T_NAME,T_ID);
	commit;
END InsertionOfTeacher;
/


--Calling the PROCEDURE for Inserting into TEACHER
SET SERVEROUTPUT ON
BEGIN
	InsertionOfTeacher('Prof. F',6);
END;
/

SELECT * FROM TEACHER;

--Deleting row of Teacher table using procedure
CREATE OR REPLACE PROCEDURE DeletionOfTeacher(T_ID TEACHER.TEACHER_ID%type) IS
BEGIN
	DELETE FROM TEACHER WHERE TEACHER_ID=T_ID;
	commit;
END DeletionOfTeacher;
/


--Calling the PROCEDURE for deleting TEACHER
SET SERVEROUTPUT ON
BEGIN
	DeletionOfTeacher(6);
END;
/

SELECT * FROM TEACHER;


--Selecting all students from group 1
SELECT STUDENT_NAME,ROLL FROM STUDENTS WHERE ROLL IN(SELECT ROLL FROM GROUPP WHERE GROUP_ID=1);

--Selecting all students from group 2
SELECT STUDENT_NAME,ROLL FROM STUDENTS WHERE ROLL IN(SELECT ROLL FROM GROUPP WHERE GROUP_ID=2);

--Selecting all students from group 3
SELECT STUDENT_NAME,ROLL FROM STUDENTS WHERE ROLL IN(SELECT ROLL FROM GROUPP WHERE GROUP_ID=3);

--Selecting all students from group 4
SELECT STUDENT_NAME,ROLL FROM STUDENTS WHERE ROLL IN(SELECT ROLL FROM GROUPP WHERE GROUP_ID=4);

--Selecting all students from group 5
SELECT STUDENT_NAME,ROLL FROM STUDENTS WHERE ROLL IN(SELECT ROLL FROM GROUPP WHERE GROUP_ID=5);


DROP TABLE G_PROJECT;
CREATE TABLE G_PROJECT AS SELECT PROJECT_NAME,GROUP_ID,COURSE_ID FROM PROJECTT WHERE 1=2;
INSERT INTO G_PROJECT(PROJECT_NAME,GROUP_ID,COURSE_ID) 
	SELECT PROJECT_NAME,GROUP_ID,COURSE_ID FROM PROJECTT WHERE GROUP_ID>=1 AND GROUP_ID<=3;

SELECT * FROM G_PROJECT;


--Selecting all students under a specific teacher
SELECT T.TEACHER_NAME,T.TEACHER_ID,G.GROUP_ID,G.ROLL
	FROM TEACHER T,COURSE C,GROUPP G
		WHERE T.TEACHER_ID=1 AND C.TEACHER_ID=1 AND C.GROUP_ID=G.GROUP_ID;

SELECT T.TEACHER_NAME,T.TEACHER_ID,G.GROUP_ID,G.ROLL
	FROM TEACHER T,COURSE C,GROUPP G
		WHERE T.TEACHER_ID=2 AND C.TEACHER_ID=2 AND C.GROUP_ID=G.GROUP_ID;


--Selecting roll and project name
SELECT P.PROJECT_NAME,P.GROUP_ID,G.ROLL
	FROM PROJECTT P JOIN GROUPP G
		ON P.GROUP_ID=G.GROUP_ID;

--Selecting student's marks by decresing order
SELECT * FROM STUDENTS ORDER BY MARKS DESC;


UPDATE STUDENTS SET MARKS=78 WHERE ROLL=1307008;
UPDATE STUDENTS SET MARKS=70 WHERE ROLL=1307014;
UPDATE STUDENTS SET MARKS=70 WHERE ROLL=1307022;

SELECT * FROM STUDENTS;




